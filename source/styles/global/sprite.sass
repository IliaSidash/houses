// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$ax-name: 'ax'
$ax-x: 0px
$ax-y: 0px
$ax-offset-x: 0px
$ax-offset-y: 0px
$ax-width: 705px
$ax-height: 438px
$ax-total-width: 705px
$ax-total-height: 547px
$ax-image: '../images/sprite.png'
$ax: (0px, 0px, 0px, 0px, 705px, 438px, 705px, 547px, '../images/sprite.png', 'ax', )
$icon1-name: 'icon1'
$icon1-x: 0px
$icon1-y: 438px
$icon1-offset-x: 0px
$icon1-offset-y: -438px
$icon1-width: 109px
$icon1-height: 109px
$icon1-total-width: 705px
$icon1-total-height: 547px
$icon1-image: '../images/sprite.png'
$icon1: (0px, 438px, 0px, -438px, 109px, 109px, 705px, 547px, '../images/sprite.png', 'icon1', )
$icon2-name: 'icon2'
$icon2-x: 109px
$icon2-y: 438px
$icon2-offset-x: -109px
$icon2-offset-y: -438px
$icon2-width: 109px
$icon2-height: 109px
$icon2-total-width: 705px
$icon2-total-height: 547px
$icon2-image: '../images/sprite.png'
$icon2: (109px, 438px, -109px, -438px, 109px, 109px, 705px, 547px, '../images/sprite.png', 'icon2', )
$icon3-name: 'icon3'
$icon3-x: 218px
$icon3-y: 438px
$icon3-offset-x: -218px
$icon3-offset-y: -438px
$icon3-width: 109px
$icon3-height: 109px
$icon3-total-width: 705px
$icon3-total-height: 547px
$icon3-image: '../images/sprite.png'
$icon3: (218px, 438px, -218px, -438px, 109px, 109px, 705px, 547px, '../images/sprite.png', 'icon3', )
$icon4-name: 'icon4'
$icon4-x: 327px
$icon4-y: 438px
$icon4-offset-x: -327px
$icon4-offset-y: -438px
$icon4-width: 109px
$icon4-height: 109px
$icon4-total-width: 705px
$icon4-total-height: 547px
$icon4-image: '../images/sprite.png'
$icon4: (327px, 438px, -327px, -438px, 109px, 109px, 705px, 547px, '../images/sprite.png', 'icon4', )
$icon5-name: 'icon5'
$icon5-x: 436px
$icon5-y: 438px
$icon5-offset-x: -436px
$icon5-offset-y: -438px
$icon5-width: 109px
$icon5-height: 109px
$icon5-total-width: 705px
$icon5-total-height: 547px
$icon5-image: '../images/sprite.png'
$icon5: (436px, 438px, -436px, -438px, 109px, 109px, 705px, 547px, '../images/sprite.png', 'icon5', )
$icon6-name: 'icon6'
$icon6-x: 545px
$icon6-y: 438px
$icon6-offset-x: -545px
$icon6-offset-y: -438px
$icon6-width: 109px
$icon6-height: 109px
$icon6-total-width: 705px
$icon6-total-height: 547px
$icon6-image: '../images/sprite.png'
$icon6: (545px, 438px, -545px, -438px, 109px, 109px, 705px, 547px, '../images/sprite.png', 'icon6', )
$spritesheet-width: 705px
$spritesheet-height: 547px
$spritesheet-image: '../images/sprite.png'
$spritesheet-sprites: ($ax, $icon1, $icon2, $icon3, $icon4, $icon5, $icon6, )
$spritesheet: (705px, 547px, '../images/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
